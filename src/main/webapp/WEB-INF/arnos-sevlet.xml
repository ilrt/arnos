<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                                        http://www.springframework.org/schema/context
                                        http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- 
        Load property files if it exists
        Any missing properties will use default defined in this file.
    -->
    <bean id="propertyConfigurer" class="org.wf.arnos.beans.ArnosPropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>file:../arnos.properties</value>
            </list>
        </property>
    </bean>

    <!-- define the logger annotation insertion bean -->
    <bean class="org.wf.arnos.logger.LoggerPostProcessor"/>

    <!--
        The controllers are autodetected POJOs labeled with the @Controller annotation
    -->
    <context:component-scan base-package="org.wf.arnos.controller"/>

    <!-- autowire the query handler -->
    <bean class="org.wf.arnos.queryhandler.ThreadedQueryHandler"/>

    <!-- define the persistant data model -->
    <bean class="org.wf.arnos.controller.model.ProjectsManager"
        p:fileName="${db.file:./WEB-INF/db_persistant.xml}"></bean>

    <!-- views -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"
        p:order="1">
        <property name="defaultContentType" value="application/xml"/>
        <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json" />
                <entry key="xml" value="application/xml" />
            </map>
        </property>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <constructor-arg>
                        <bean class="org.springframework.oxm.xstream.XStreamMarshaller" />
                    </constructor-arg>
                </bean>
            </list>
        </property>
        <property name="ignoreAcceptHeader" value="false" />
    </bean>

    <!-- Threading -->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5" />
        <property name="maxPoolSize" value="10" />
        <property name="queueCapacity" value="25" />
    </bean>

    <!-- Cache setup -->
    <bean class="org.wf.arnos.cachehandler.SimpleCacheHandler">
        <constructor-arg value="${ehcache.file:./WEB-INF/ehcache.xml}"/>
    </bean>

    <!-- JMX Beans -->
    <bean id="exporter"
          class="org.springframework.jmx.export.MBeanExporter"
          lazy-init="false">
        <property name="autodetect" value="true"></property>
        <property name="namingStrategy" ref="namingStrategy"></property>
        <property name="assembler" ref="assembler"></property>
        <property name="registrationBehaviorName" value="REGISTRATION_REPLACE_EXISTING"/>
    </bean>

    <bean id="attributeSource" class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource"/>

    <bean id="assembler" class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
        <property name="attributeSource" ref="attributeSource"/>
    </bean>

    <bean id="namingStrategy"
          class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
        <property name="attributeSource" ref="attributeSource"/>
    </bean>

    <bean class="org.wf.arnos.logger.Log4jMBean"/>

    <!--
    <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
        <property name="locateExistingServerIfPossible" value="true" />
    </bean>

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="/WEB-INF/ehcache.xml"/>
        <property name="shared" value="true"/>
    </bean>

    <bean class="net.sf.ehcache.management.ManagementService" init-method="init">
        <constructor-arg ref="cacheManager" />
        <constructor-arg ref="mbeanServer" />
        <constructor-arg value="true" />
        <constructor-arg value="true" />
        <constructor-arg value="true" />
        <constructor-arg value="true" />
    </bean>
    -->
</beans>